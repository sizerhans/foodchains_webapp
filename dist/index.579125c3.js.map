{"mappings":"AAAC,CAAA,IAAM;IACN,8DAA8D;IAC9D,0DAA0D;IAC1D,4DAA4D;IAE5D,MAAM,QAAQ,KAAK,wCAAwC;IAC3D,IAAI,SAAS,GAAG,kDAAkD;IAElE,iEAAiE;IACjE,uDAAuD;IAEvD,IAAI,YAAY,KAAK;IAErB,mEAAmE;IACnE,yCAAyC;IAEzC,IAAI,QAAQ,IAAI;IAChB,IAAI,SAAS,IAAI;IACjB,IAAI,QAAQ,IAAI;IAChB,IAAI,cAAc,IAAI;IAGtB,SAAS,2BAA2B;QAClC,IAAI,OAAO,IAAI,KAAK,OAAO,GAAG,EAAE;YACjC,6DAA6D;YAC7D,2DAA2D;YAC3D,yDAAyD;YACzD,SAAS,aAAa,CAAC,gBAAgB,MAAM;YAC7C,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,OAAO,WAAW,GAAG;YACrB,SAAS,IAAI,CAAC,MAAM,CAAC;YACrB,OAAO,gBAAgB,CAAC,SAAS,IAAM,OAAO,IAAI,CAAC,SAAS,IAAI;YAChE,OAAO,IAAI;QACV,CAAC;QACD,OAAO,KAAK;IACd;IAEA,SAAS,UAAU;QACjB,IAAI,4BACL;QAEC,QAAQ,SAAS,cAAc,CAAC;QAChC,SAAS,SAAS,cAAc,CAAC;QACjC,QAAQ,SAAS,cAAc,CAAC;QAChC,cAAc,SAAS,cAAc,CAAC;QAEtC,UAAU,YAAY,CAAC,YAAY,CAAC;YAAG,OAAM,KAAK;YAAE,OAAO;gBAC5D,sBAAsB;gBACtB,YAAY;YAGX;QACF,GAAG,IAAI,CAAC,CAAC,SAAW;YACjB,MAAM,SAAS,GAAG;YAClB,MAAM,IAAI;QACZ,GACC,KAAK,CAAC,CAAC,MAAQ;YACd,QAAQ,KAAK,CAAC,CAAC,mBAAmB,EAAE,IAAI,CAAC;QAC3C;QAEC,MAAM,gBAAgB,CACvB,WACA,CAAC,KAAO;YACN,IAAI,CAAC,WAAW;gBACjB,SAAS,MAAM,WAAW,GAAI,CAAA,MAAM,UAAU,GAAG,KAAI;gBAErD,kEAAkE;gBAClE,0DAA0D;gBAE1D,MAAM,YAAY,CAAC,SAAS;gBAC5B,MAAM,YAAY,CAAC,UAAU;gBAC7B,OAAO,YAAY,CAAC,SAAS;gBAC7B,OAAO,YAAY,CAAC,UAAU;gBAC9B,YAAY,IAAI;YACf,CAAC;QACH,GACA,KAAK;QAGJ,YAAY,gBAAgB,CAC7B,SACA,CAAC,KAAO;YACN;YACA,GAAG,cAAc;QACnB,GACA,KAAK;QAGJ;IACF;IAEA,uDAAuD;IACvD,YAAY;IAEZ,SAAS,aAAa;QACpB,MAAM,UAAU,OAAO,UAAU,CAAC;QAClC,QAAQ,SAAS,GAAG;QACpB,QAAQ,QAAQ,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;QAElD,MAAM,OAAO,OAAO,SAAS,CAAC;QAC9B,MAAM,YAAY,CAAC,OAAO;IAC5B;IAEA,gEAAgE;IAChE,8DAA8D;IAC9D,iEAAiE;IACjE,kEAAkE;IAClE,mCAAmC;IAEnC,SAAS,cAAc;QACrB,MAAM,UAAU,OAAO,UAAU,CAAC;QAClC,IAAI,SAAS,QAAQ;YACtB,OAAO,KAAK,GAAG;YACf,OAAO,MAAM,GAAG;YAChB,QAAQ,SAAS,CAAC,OAAO,GAAG,GAAG,OAAO;YAEtC,MAAM,OAAO,OAAO,SAAS,CAAC;YAC9B,MAAM,YAAY,CAAC,OAAO;QACzB,OACD;IAED;IAEA,SAAS,eAAe,IAAI,EAAE;QAC7B,QAAQ,SAAS,cAAc,CAAC;QAChC,IAAG,QAAQ,SACV,MAAM,SAAS,GAAG;IAEpB;IAEA,uDAAuD;IACvD,4BAA4B;IAC5B,OAAO,gBAAgB,CAAC,QAAQ,SAAS,KAAK;AAC7C,CAAA","sources":["src/index.js"],"sourcesContent":["(() => {\n\t// The width and height of the captured photo. We will set the\n\t// width to the value defined here, but the height will be\n\t// calculated based on the aspect ratio of the input stream.\n  \n\tconst width = 320; // We will scale the photo width to this\n\tlet height = 0; // This will be computed based on the input stream\n  \n\t// |streaming| indicates whether or not we're currently streaming\n\t// video from the camera. Obviously, we start at false.\n  \n\tlet streaming = false;\n  \n\t// The various HTML elements we need to configure or control. These\n\t// will be set by the startup() function.\n  \n\tlet video = null;\n\tlet canvas = null;\n\tlet photo = null;\n\tlet startbutton = null;\n\n  \n\tfunction showViewLiveResultButton() {\n\t  if (window.self !== window.top) {\n\t\t// Ensure that if our document is in a frame, we get the user\n\t\t// to first open it in its own tab or window. Otherwise, it\n\t\t// won't be able to request permission for camera access.\n\t\tdocument.querySelector(\".contentarea\").remove();\n\t\tconst button = document.createElement(\"button\");\n\t\tbutton.textContent = \"View live result of the example code above\";\n\t\tdocument.body.append(button);\n\t\tbutton.addEventListener(\"click\", () => window.open(location.href));\n\t\treturn true;\n\t  }\n\t  return false;\n\t}\n  \n\tfunction startup() {\n\t  if (showViewLiveResultButton()) {\n\t\treturn;\n\t  }\n\t  video = document.getElementById(\"video\");\n\t  canvas = document.getElementById(\"canvas\");\n\t  photo = document.getElementById(\"photo\");\n\t  startbutton = document.getElementById(\"startbutton\");\n  \n\t  navigator.mediaDevices.getUserMedia({  audio:false, video: { \n\t\t//Requests rear camera\n\t\tfacingMode: \"environment\",\n\t\t//width: { min:1, ideal:1, max:1},\n\t\t//height: { min:1, ideal:1, max:1},\n\t  }\n\t}).then((stream) => {\n\t\t  video.srcObject = stream;\n\t\t  video.play();\n\t\t})\n\t\t.catch((err) => {\n\t\t  console.error(`An error occurred: ${err}`);\n\t\t});\n  \n\t  video.addEventListener(\n\t\t\"canplay\",\n\t\t(ev) => {\n\t\t  if (!streaming) {\n\t\t\theight = video.videoHeight / (video.videoWidth / width);\n  \n\t\t\t// Firefox currently has a bug where the height can't be read from\n\t\t\t// the video, so we will make assumptions if this happens.\n  \n\t\t\tvideo.setAttribute(\"width\", width);\n\t\t\tvideo.setAttribute(\"height\", height);\n\t\t\tcanvas.setAttribute(\"width\", width);\n\t\t\tcanvas.setAttribute(\"height\", height);\n\t\t\tstreaming = true;\n\t\t  }\n\t\t},\n\t\tfalse\n\t  );\n  \n\t  startbutton.addEventListener(\n\t\t\"click\",\n\t\t(ev) => {\n\t\t  takepicture();\n\t\t  ev.preventDefault();\n\t\t},\n\t\tfalse\n\t  );\n  \n\t  clearphoto();\n\t}\n  \n\t// Fill the photo with an indication that none has been\n\t// captured.\n  \n\tfunction clearphoto() {\n\t  const context = canvas.getContext(\"2d\");\n\t  context.fillStyle = \"#AAA\";\n\t  context.fillRect(0, 0, canvas.width, canvas.height);\n  \n\t  const data = canvas.toDataURL(\"image/png\");\n\t  photo.setAttribute(\"src\", data);\n\t}\n  \n\t// Capture a photo by fetching the current contents of the video\n\t// and drawing it into a canvas, then converting that to a PNG\n\t// format data URL. By drawing it on an offscreen canvas and then\n\t// drawing that to the screen, we can change its size and/or apply\n\t// other changes before drawing it.\n  \n\tfunction takepicture() {\n\t  const context = canvas.getContext(\"2d\");\n\t  if (width && height) {\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tcontext.drawImage(video, 0, 0, width, height);\n  \n\t\tconst data = canvas.toDataURL(\"image/png\");\n\t\tphoto.setAttribute(\"src\", data);\n\t  } else {\n\t\tclearphoto();\n\t  }\n\t}\n\n\tfunction identifyButton(type) {\n\t\tgroup = document.getElementById('btn-group')\n\t\tif(type == 'plant') {\n\t\t\tgroup.innerHTML = \"<h3>Does your Plant have</h3><button onclick=\\\"identifyButton('plant')\\\">Square Leaves</button> <button onclick=\\\"identifyButton('animal')\\\">Elipse leaves</button>\";\n\t\t}\n\t}\n  \n\t// Set up our event listener to run the startup process\n\t// once loading is complete.\n\twindow.addEventListener(\"load\", startup, false);\n  })();"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}