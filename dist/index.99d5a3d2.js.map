{"mappings":"AAAC,MAKA,MAAMA,EAAQ,IACd,IAAIC,EAAS,EAKTC,GAAY,EAKZC,EAAQ,KACRC,EAAS,KACTC,EAAQ,KACRC,EAAc,KA2ElB,SAASC,IACP,MAAMC,EAAUJ,EAAOK,WAAW,MAClCD,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAGP,EAAOJ,MAAOI,EAAOH,QAE5C,MAAMW,EAAOR,EAAOS,UAAU,aAC9BR,EAAMS,aAAa,MAAOF,EAC5B,CA+BAG,OAAOC,iBAAiB,QA/FxB,YAfA,WACE,GAAID,OAAOE,OAASF,OAAOG,IAAK,CAIjCC,SAASC,cAAc,gBAAgBC,SACvC,MAAMC,EAASH,SAASI,cAAc,UAItC,OAHAD,EAAOE,YAAc,6CACrBL,SAASM,KAAKC,OAAOJ,GACrBA,EAAON,iBAAiB,SAAS,IAAMD,OAAOY,KAAKC,SAASC,SACrD,CACN,CACA,OAAO,CACT,EAGMC,KAGJ3B,EAAQgB,SAASY,eAAe,SAChC3B,EAASe,SAASY,eAAe,UACjC1B,EAAQc,SAASY,eAAe,SAChCzB,EAAca,SAASY,eAAe,eAEtCC,UAAUC,aAAaC,aAAa,CAAGC,OAAM,EAAOhC,MAAO,CAE5DiC,WAAY,iBAIVC,MAAMC,IACNnC,EAAMoC,UAAYD,EAClBnC,EAAMqC,MAAI,IAEXC,OAAOC,IACNC,QAAQC,MAAM,sBAAsBF,IAAK,IAG1CvC,EAAMa,iBACP,WACC6B,IACM3C,IACND,EAASE,EAAM2C,aAAe3C,EAAM4C,WAAa/C,GAKjDG,EAAMW,aAAa,QAASd,GAC5BG,EAAMW,aAAa,SAAUb,GAC7BG,EAAOU,aAAa,QAASd,GAC7BI,EAAOU,aAAa,SAAUb,GAC9BC,GAAY,EACX,IAEF,GAGCI,EAAYU,iBACb,SACC6B,KA4BF,WACE,MAAMrC,EAAUJ,EAAOK,WAAW,MAClC,GAAIT,GAASC,EAAQ,CACtBG,EAAOJ,MAAQA,EACfI,EAAOH,OAASA,EAChBO,EAAQwC,UAAU7C,EAAO,EAAG,EAAGH,EAAOC,GAEtC,MAAMW,EAAOR,EAAOS,UAAU,aAC9BR,EAAMS,aAAa,MAAOF,EACzB,MACDL,GAED,CAvCG0C,GACAJ,EAAGK,gBAAc,IAEnB,GAGC3C,IACF,IA2CyC,EACxC,EArID","sources":["src/index.mjs"],"sourcesContent":["(() => {\n\t// The width and height of the captured photo. We will set the\n\t// width to the value defined here, but the height will be\n\t// calculated based on the aspect ratio of the input stream.\n  \n\tconst width = 320; // We will scale the photo width to this\n\tlet height = 0; // This will be computed based on the input stream\n  \n\t// |streaming| indicates whether or not we're currently streaming\n\t// video from the camera. Obviously, we start at false.\n  \n\tlet streaming = false;\n  \n\t// The various HTML elements we need to configure or control. These\n\t// will be set by the startup() function.\n  \n\tlet video = null;\n\tlet canvas = null;\n\tlet photo = null;\n\tlet startbutton = null;\n\n  \n\tfunction showViewLiveResultButton() {\n\t  if (window.self !== window.top) {\n\t\t// Ensure that if our document is in a frame, we get the user\n\t\t// to first open it in its own tab or window. Otherwise, it\n\t\t// won't be able to request permission for camera access.\n\t\tdocument.querySelector(\".contentarea\").remove();\n\t\tconst button = document.createElement(\"button\");\n\t\tbutton.textContent = \"View live result of the example code above\";\n\t\tdocument.body.append(button);\n\t\tbutton.addEventListener(\"click\", () => window.open(location.href));\n\t\treturn true;\n\t  }\n\t  return false;\n\t}\n  \n\tfunction startup() {\n\t  if (showViewLiveResultButton()) {\n\t\treturn;\n\t  }\n\t  video = document.getElementById(\"video\");\n\t  canvas = document.getElementById(\"canvas\");\n\t  photo = document.getElementById(\"photo\");\n\t  startbutton = document.getElementById(\"startbutton\");\n  \n\t  navigator.mediaDevices.getUserMedia({  audio:false, video: { \n\t\t//Requests rear camera\n\t\tfacingMode: \"environment\",\n\t\t//width: { min:1, ideal:1, max:1},\n\t\t//height: { min:1, ideal:1, max:1},\n\t  }\n\t}).then((stream) => {\n\t\t  video.srcObject = stream;\n\t\t  video.play();\n\t\t})\n\t\t.catch((err) => {\n\t\t  console.error(`An error occurred: ${err}`);\n\t\t});\n  \n\t  video.addEventListener(\n\t\t\"canplay\",\n\t\t(ev) => {\n\t\t  if (!streaming) {\n\t\t\theight = video.videoHeight / (video.videoWidth / width);\n  \n\t\t\t// Firefox currently has a bug where the height can't be read from\n\t\t\t// the video, so we will make assumptions if this happens.\n  \n\t\t\tvideo.setAttribute(\"width\", width);\n\t\t\tvideo.setAttribute(\"height\", height);\n\t\t\tcanvas.setAttribute(\"width\", width);\n\t\t\tcanvas.setAttribute(\"height\", height);\n\t\t\tstreaming = true;\n\t\t  }\n\t\t},\n\t\tfalse\n\t  );\n  \n\t  startbutton.addEventListener(\n\t\t\"click\",\n\t\t(ev) => {\n\t\t  takepicture();\n\t\t  ev.preventDefault();\n\t\t},\n\t\tfalse\n\t  );\n  \n\t  clearphoto();\n\t}\n  \n\t// Fill the photo with an indication that none has been\n\t// captured.\n  \n\tfunction clearphoto() {\n\t  const context = canvas.getContext(\"2d\");\n\t  context.fillStyle = \"#AAA\";\n\t  context.fillRect(0, 0, canvas.width, canvas.height);\n  \n\t  const data = canvas.toDataURL(\"image/png\");\n\t  photo.setAttribute(\"src\", data);\n\t}\n  \n\t// Capture a photo by fetching the current contents of the video\n\t// and drawing it into a canvas, then converting that to a PNG\n\t// format data URL. By drawing it on an offscreen canvas and then\n\t// drawing that to the screen, we can change its size and/or apply\n\t// other changes before drawing it.\n  \n\tfunction takepicture() {\n\t  const context = canvas.getContext(\"2d\");\n\t  if (width && height) {\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tcontext.drawImage(video, 0, 0, width, height);\n  \n\t\tconst data = canvas.toDataURL(\"image/png\");\n\t\tphoto.setAttribute(\"src\", data);\n\t  } else {\n\t\tclearphoto();\n\t  }\n\t}\n\n\tfunction identifyButton(type) {\n\t\tgroup = document.getElementById('btn-group')\n\t\tif(type == 'plant') {\n\t\t\tgroup.innerHTML = \"<h3>Does your Plant have</h3><button onclick=\\\"identifyButton('plant')\\\">Square Leaves</button> <button onclick=\\\"identifyButton('animal')\\\">Elipse leaves</button>\";\n\t\t}\n\t}\n  \n\t// Set up our event listener to run the startup process\n\t// once loading is complete.\n\twindow.addEventListener(\"load\", startup, false);\n  })();"],"names":["width","height","streaming","video","canvas","photo","startbutton","clearphoto","context","getContext","fillStyle","fillRect","data","toDataURL","setAttribute","window","addEventListener","self","top","document","querySelector","remove","button","createElement","textContent","body","append","open","location","href","showViewLiveResultButton","getElementById","navigator","mediaDevices","getUserMedia","audio","facingMode","then","stream","srcObject","play","catch","err","console","error","ev","videoHeight","videoWidth","drawImage","takepicture","preventDefault"],"version":3,"file":"index.99d5a3d2.js.map"}